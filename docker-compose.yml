version: "3.7"

volumes:
  kong_data: {}
  redis_data: {}

networks:
  kong-net:
    driver: bridge

services:
  #######################################
  # DJANGO APP CONFIGURATIONS
  #######################################
  app_web:
    build:
      context: .
      dockerfile: web_app.Dockerfile
      # active only for realtime development else redundant with COPY statement in DockerFile
    # volumes:
    #   - ./source:/app
    ports:
      - "8002:8002"
    env_file: source/.env
    depends_on:
      - kong
      - kong-database
      - kong-migration
      - redis

  #######################################
  # KONG CONFIGURATIONS
  #######################################

  # Postgres: The database used by Kong
  kong-database:
    build:
      context: .
      dockerfile: psql.Dockerfile
    restart: always
    networks:
      - kong-net
    volumes:
      - kong_data:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_MULTIPLE_DATABASES: app_db
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: ${KONG_PG_PASSWORD}
      POSTGRES_DB: kong
    env_file: source/.env
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 15s
      timeout: 15s
      retries: 3

  # Kong database migration
  kong-migration:
    image: kong:latest
    command: kong migrations bootstrap
    networks:
      - kong-net
    restart: on-failure
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD}
      KONG_CASSANDRA_CONTACT_POINTS: kong-database
    env_file: source/.env
    links:
      - kong-database
    depends_on:
      - kong-database

  # Kong: The API Gateway
  kong:
    build:
      context: .
      dockerfile: kong.Dockerfile
      args:
        PLUGINS: "kong-spec-expose"
    restart: on-failure
    networks:
      - kong-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD}
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_PROXY_LISTEN_SSL: 0.0.0.0:8443
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_LISTEN_SSL: 0.0.0.0:8444
    env_file: source/.env
    depends_on:
      - kong-migration
      - kong-database
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8443:8443"
      - "8444:8444"

  redis:
    image: redis
    volumes:
      - redis_data:/data
    command: redis-server --loglevel warning --requirepass ${REDIS_PASSWORD}
    restart: always
    ports:
      - '6379:6379'
