"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 4.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""


import os
from pathlib import Path

from django.core.management import utils
from django.core.management.commands import runserver

from . import env

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # external apps
    "rest_framework",
    "rest_framework_simplejwt.token_blacklist",
    "django_rest_passwordreset",
    # local apps
    "authentication",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "app.urls.core"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "app.wsgi.application"


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

USE_L10N = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Custom configuration
AUTH_USER_MODEL = "authentication.User"

# Django Rest Framework configurations
REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework_simplejwt.authentication.JWTAuthentication"
    ],
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",  # Non generic views and viewsets do not have pagination by default
    "PAGE_SIZE": 50,
    "COERCE_DECIMAL_TO_STRING": False,
    "DEFAULT_RENDERER_CLASSES": [
        "rest_framework.renderers.JSONRenderer",
    ],
}

SIMPLE_JWT = {"ROTATE_REFRESH_TOKENS": True}

ENV_NAME = os.getenv("ENV", "dev")

IS_DEVELOPMENT = ENV_NAME in ["dev", "development"]

# Default values
_DEFAULT_PORT = 8002
_DEFAULT_DB_PORT = 5432
_DEFAULT_ALLOWED_HOSTS = ""
_DEFAULT_S3_ENV_FILE_LOCATION = f"env_files/{ENV_NAME}.env"
_DEFAULT_S3_REGION_NAME = "ap-southeast-1"
_DEFAULT_DEBUG = IS_DEVELOPMENT
_DEFAULT_FETCH_ENV_FROM_S3 = False

if IS_DEVELOPMENT:
    ROOT_URLCONF = "app.urls.dev"
    _DEFAULT_ALLOWED_HOSTS = "*"
elif ENV_NAME in ["prod", "production"]:
    ROOT_URLCONF = "app.urls.prod"
    _DEFAULT_ALLOWED_HOSTS = "localhost,127.0.0.1"


# Load ENV variables
env.load_envfile(ENV_NAME)
# Set configuration for S3 environment variable loading
AWS_S3_ACCESS_KEY_ID = env.lookup_env(["AWS_S3_ACCESS_KEY_ID", "AWS_ACCESS_KEY_ID"])
AWS_S3_SECRET_ACCESS_KEY = env.lookup_env(
    ["AWS_S3_SECRET_ACCESS_KEY", "AWS_SECRET_ACCESS_KEY"]
)
AWS_SESSION_TOKEN = env.lookup_env(["AWS_SESSION_TOKEN", "AWS_SECURITY_TOKEN"])
AWS_STORAGE_BUCKET_NAME = env.lookup_env(["AWS_STORAGE_BUCKET_NAME"])
AWS_S3_REGION_NAME = env.lookup_env(
    ["AWS_S3_REGION_NAME", "AWS_REGION_NAME"], _DEFAULT_S3_REGION_NAME
)
S3_ENV_FILE_LOCATION = env.get_env_value(
    "S3_ENV_FILE_LOCATION", _DEFAULT_S3_ENV_FILE_LOCATION
)
# load env variables from S3
if env.get_bool_from_env("FETCH_ENV_VARS_FROM_S3", _DEFAULT_FETCH_ENV_FROM_S3):
    env.load_env_from_s3()


DEBUG = env.get_env_value("DEBUG", _DEFAULT_DEBUG)

SECRET_KEY = env.get_env_value("SECRET_KEY")
if not SECRET_KEY and DEBUG and IS_DEVELOPMENT:
    SECRET_KEY = utils.get_random_secret_key()


ALLOWED_HOSTS = env.get_list_from_env("ALLOWED_HOSTS", _DEFAULT_ALLOWED_HOSTS)

# Set application port
runserver.Command.default_port = env.get_env_value("PORT", _DEFAULT_PORT)

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "USER": env.get_env_value("DATABASE_USER"),
        "PASSWORD": env.get_env_value("DATABASE_PASSWORD"),
        "NAME": env.get_env_value("DATABASE_NAME"),
        "HOST": env.get_env_value("DATABASE_HOST"),
        "PORT": int(env.get_env_value("DATABASE_PORT", _DEFAULT_DB_PORT)),
        "TEST": {
            "NAME": "test_db",
        },
    },
}

ENCRYPTION_KEY = ""
DOMAIN = ""
